<svg width="900" height="700" xmlns="http://www.w3.org/2000/svg">
  <rect width="900" height="700" fill="transparent"/>
  
  <!-- Title -->
  <text x="450" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#e0e0e0">
    Testing Strategies for BunnyFarm Applications
  </text>
  
  <!-- Testing Pyramid -->
  <g>
    <text x="450" y="70" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#4299e1">
      Testing Pyramid
    </text>
    
    <!-- Unit Tests (Base) -->
    <rect x="200" y="200" width="400" height="60" rx="6" fill="#2d3748" stroke="#68d391" stroke-width="2"/>
    <text x="400" y="225" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#68d391">Unit Tests</text>
    <text x="400" y="245" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#e0e0e0">Message Classes, Business Logic, Validation</text>
    <text x="400" y="260" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#9ca3af">Fast • Isolated • High Coverage</text>
    
    <!-- Integration Tests (Middle) -->
    <rect x="250" y="130" width="300" height="60" rx="6" fill="#2d3748" stroke="#4299e1" stroke-width="2"/>
    <text x="400" y="155" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#4299e1">Integration Tests</text>
    <text x="400" y="175" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#e0e0e0">Message Publishing, Queue Processing</text>
    <text x="400" y="190" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#9ca3af">Medium Speed • Component Level</text>
    
    <!-- E2E Tests (Top) -->
    <rect x="300" y="90" width="200" height="40" rx="6" fill="#2d3748" stroke="#9f7aea" stroke-width="2"/>
    <text x="400" y="115" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#9f7aea">End-to-End Tests</text>
    <text x="400" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#9ca3af">Full Workflow • Slow • Critical Paths</text>
  </g>
  
  <!-- Unit Testing -->
  <g>
    <text x="200" y="320" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#68d391">
      Unit Testing
    </text>
    
    <rect x="50" y="340" width="300" height="140" rx="6" fill="#2d3748" stroke="#68d391" stroke-width="1"/>
    <text x="200" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#68d391">Message Class Testing</text>
    
    <text x="70" y="385" font-family="monospace" font-size="9" fill="#9ca3af"># RSpec example</text>
    <text x="70" y="400" font-family="monospace" font-size="9" fill="#e0e0e0">describe OrderMessage do</text>
    <text x="80" y="415" font-family="monospace" font-size="9" fill="#e0e0e0">let(:message) do</text>
    <text x="90" y="430" font-family="monospace" font-size="9" fill="#e0e0e0">OrderMessage.new(</text>
    <text x="100" y="445" font-family="monospace" font-size="9" fill="#e0e0e0">order_id: 123,</text>
    <text x="100" y="460" font-family="monospace" font-size="9" fill="#e0e0e0">total: 99.99)</text>
    <text x="80" y="475" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
    
    <text x="70" y="500" font-family="monospace" font-size="9" fill="#e0e0e0">it 'validates required fields'</text>
    <text x="70" y="515" font-family="monospace" font-size="9" fill="#e0e0e0">it 'calculates totals correctly'</text>
  </g>
  
  <!-- Integration Testing -->
  <g>
    <text x="450" y="320" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#4299e1">
      Integration Testing
    </text>
    
    <rect x="380" y="340" width="300" height="140" rx="6" fill="#2d3748" stroke="#4299e1" stroke-width="1"/>
    <text x="530" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#4299e1">Publisher/Consumer Testing</text>
    
    <text x="400" y="385" font-family="monospace" font-size="9" fill="#9ca3af"># Integration test</text>
    <text x="400" y="400" font-family="monospace" font-size="9" fill="#e0e0e0">it 'publishes and processes' do</text>
    <text x="410" y="415" font-family="monospace" font-size="9" fill="#e0e0e0">message = OrderMessage.new</text>
    <text x="410" y="430" font-family="monospace" font-size="9" fill="#e0e0e0">message.publish('process')</text>
    <text x="410" y="445" font-family="monospace" font-size="9" fill="#e0e0e0">expect(queue).to have</text>
    <text x="420" y="460" font-family="monospace" font-size="9" fill="#e0e0e0">_received_message</text>
    <text x="400" y="475" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
    
    <text x="400" y="500" font-family="monospace" font-size="9" fill="#e0e0e0">• Test with test queues</text>
    <text x="400" y="515" font-family="monospace" font-size="9" fill="#e0e0e0">• Mock external services</text>
  </g>
  
  <!-- Test Doubles -->
  <g>
    <text x="750" y="320" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#9f7aea">
      Test Doubles
    </text>
    
    <rect x="620" y="340" width="260" height="140" rx="6" fill="#2d3748" stroke="#9f7aea" stroke-width="1"/>
    <text x="750" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#9f7aea">Mocking Strategies</text>
    
    <!-- Mock Types -->
    <text x="640" y="385" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#f6e05e">Message Mocks:</text>
    <text x="650" y="400" font-family="monospace" font-size="9" fill="#e0e0e0">allow(message)</text>
    <text x="660" y="415" font-family="monospace" font-size="9" fill="#e0e0e0">.to receive(:publish)</text>
    
    <text x="640" y="440" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#f6e05e">Queue Stubs:</text>
    <text x="650" y="455" font-family="monospace" font-size="9" fill="#e0e0e0">stub_queue_consumer</text>
    <text x="660" y="470" font-family="monospace" font-size="9" fill="#e0e0e0">expect_message_count(5)</text>
    
    <text x="640" y="495" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#f6e05e">Test Adapters:</text>
    <text x="650" y="510" font-family="monospace" font-size="9" fill="#e0e0e0">BunnyFarm.test_mode!</text>
  </g>
  
  <!-- Testing Tools -->
  <g>
    <text x="450" y="540" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#e0e0e0">
      Testing Tools and Helpers
    </text>
    
    <!-- RSpec -->
    <rect x="50" y="560" width="180" height="100" rx="6" fill="#1a202c" stroke="#68d391" stroke-width="1"/>
    <text x="140" y="580" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#68d391">RSpec Integration</text>
    <text x="60" y="600" font-family="monospace" font-size="9" fill="#e0e0e0">require 'bunny_farm/rspec'</text>
    <text x="60" y="620" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Message matchers</text>
    <text x="60" y="635" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Queue helpers</text>
    <text x="60" y="650" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Test configuration</text>
    
    <!-- Test Environment -->
    <rect x="250" y="560" width="180" height="100" rx="6" fill="#1a202c" stroke="#4299e1" stroke-width="1"/>
    <text x="340" y="580" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#4299e1">Test Environment</text>
    <text x="260" y="600" font-family="monospace" font-size="9" fill="#e0e0e0">BUNNY_FARM_ENV=test</text>
    <text x="260" y="620" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Isolated queues</text>
    <text x="260" y="635" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• In-memory broker</text>
    <text x="260" y="650" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Fast execution</text>
    
    <!-- Coverage -->
    <rect x="450" y="560" width="180" height="100" rx="6" fill="#1a202c" stroke="#9f7aea" stroke-width="1"/>
    <text x="540" y="580" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#9f7aea">Coverage Tools</text>
    <text x="460" y="600" font-family="monospace" font-size="9" fill="#e0e0e0">gem 'simplecov'</text>
    <text x="460" y="620" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Line coverage</text>
    <text x="460" y="635" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Branch coverage</text>
    <text x="460" y="650" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Message path coverage</text>
    
    <!-- Performance -->
    <rect x="650" y="560" width="180" height="100" rx="6" fill="#1a202c" stroke="#f6e05e" stroke-width="1"/>
    <text x="740" y="580" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#f6e05e">Performance Testing</text>
    <text x="660" y="600" font-family="monospace" font-size="9" fill="#e0e0e0">gem 'benchmark-ips'</text>
    <text x="660" y="620" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Message throughput</text>
    <text x="660" y="635" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Queue performance</text>
    <text x="660" y="650" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Memory usage</text>
  </g>
  
  <!-- Connecting lines -->
  <defs>
    <marker id="arrow-test" markerWidth="8" markerHeight="6" refX="7" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#ff9800"/>
    </marker>
  </defs>
  
  <!-- Pyramid connections -->
  <line x1="400" y1="190" x2="400" y2="130" stroke="#ff9800" stroke-width="1" marker-end="url(#arrow-test)"/>
  <line x1="400" y1="260" x2="400" y2="200" stroke="#ff9800" stroke-width="1" marker-end="url(#arrow-test)"/>
</svg>