<svg width="1000" height="800" xmlns="http://www.w3.org/2000/svg">
  <rect width="1000" height="800" fill="transparent"/>
  
  <!-- Title -->
  <text x="500" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#e0e0e0">
    Best Practices and Design Patterns
  </text>
  
  <!-- Design Principles -->
  <g>
    <text x="500" y="70" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#68d391">
      Core Design Principles
    </text>
    
    <!-- Single Responsibility -->
    <rect x="50" y="100" width="180" height="100" rx="8" fill="#2d3748" stroke="#68d391" stroke-width="2"/>
    <text x="140" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#68d391">Single Responsibility</text>
    <text x="60" y="145" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• One message = one purpose</text>
    <text x="60" y="160" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Focused business logic</text>
    <text x="60" y="175" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Clear action methods</text>
    <text x="60" y="190" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Minimal dependencies</text>
    
    <!-- Idempotency -->
    <rect x="250" y="100" width="180" height="100" rx="8" fill="#2d3748" stroke="#4299e1" stroke-width="2"/>
    <text x="340" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#4299e1">Idempotency</text>
    <text x="260" y="145" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Safe to retry operations</text>
    <text x="260" y="160" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Unique message IDs</text>
    <text x="260" y="175" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• State validation</text>
    <text x="260" y="190" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Duplicate detection</text>
    
    <!-- Loose Coupling -->
    <rect x="450" y="100" width="180" height="100" rx="8" fill="#2d3748" stroke="#9f7aea" stroke-width="2"/>
    <text x="540" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#9f7aea">Loose Coupling</text>
    <text x="460" y="145" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Message-driven design</text>
    <text x="460" y="160" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Service boundaries</text>
    <text x="460" y="175" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Event-driven architecture</text>
    <text x="460" y="190" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Async communication</text>
    
    <!-- Error Resilience -->
    <rect x="650" y="100" width="180" height="100" rx="8" fill="#2d3748" stroke="#f6e05e" stroke-width="2"/>
    <text x="740" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#f6e05e">Error Resilience</text>
    <text x="660" y="145" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Graceful degradation</text>
    <text x="660" y="160" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Circuit breakers</text>
    <text x="660" y="175" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Retry strategies</text>
    <text x="660" y="190" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Dead letter handling</text>
  </g>
  
  <!-- Message Design Patterns -->
  <g>
    <text x="500" y="250" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#e0e0e0">
      Message Design Patterns
    </text>
    
    <!-- Command Pattern -->
    <rect x="50" y="280" width="220" height="140" rx="6" fill="#2d3748" stroke="#68d391" stroke-width="1"/>
    <text x="160" y="305" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#68d391">Command Pattern</text>
    
    <text x="70" y="325" font-family="monospace" font-size="9" fill="#9ca3af"># Encapsulate requests</text>
    <text x="70" y="340" font-family="monospace" font-size="9" fill="#e0e0e0">class ProcessOrderCommand</text>
    <text x="80" y="355" font-family="monospace" font-size="9" fill="#e0e0e0">fields :order_id, :user_id</text>
    <text x="80" y="370" font-family="monospace" font-size="9" fill="#e0e0e0">actions :execute, :undo</text>
    
    <text x="80" y="390" font-family="monospace" font-size="9" fill="#e0e0e0">def execute</text>
    <text x="90" y="405" font-family="monospace" font-size="9" fill="#e0e0e0">OrderService.process(order_id)</text>
    <text x="70" y="420" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
    
    <!-- Event Pattern -->
    <rect x="290" y="280" width="220" height="140" rx="6" fill="#2d3748" stroke="#4299e1" stroke-width="1"/>
    <text x="400" y="305" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#4299e1">Event Pattern</text>
    
    <text x="310" y="325" font-family="monospace" font-size="9" fill="#9ca3af"># Record what happened</text>
    <text x="310" y="340" font-family="monospace" font-size="9" fill="#e0e0e0">class OrderProcessedEvent</text>
    <text x="320" y="355" font-family="monospace" font-size="9" fill="#e0e0e0">fields :order_id, :timestamp</text>
    <text x="320" y="370" font-family="monospace" font-size="9" fill="#e0e0e0">actions :notify, :update_metrics</text>
    
    <text x="320" y="390" font-family="monospace" font-size="9" fill="#e0e0e0">def notify</text>
    <text x="330" y="405" font-family="monospace" font-size="9" fill="#e0e0e0">publish('email_confirmation')</text>
    <text x="310" y="420" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
    
    <!-- Document Pattern -->
    <rect x="530" y="280" width="220" height="140" rx="6" fill="#2d3748" stroke="#9f7aea" stroke-width="1"/>
    <text x="640" y="305" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#9f7aea">Document Pattern</text>
    
    <text x="550" y="325" font-family="monospace" font-size="9" fill="#9ca3af"># Rich data structures</text>
    <text x="550" y="340" font-family="monospace" font-size="9" fill="#e0e0e0">class CustomerDocumentMsg</text>
    <text x="560" y="355" font-family="monospace" font-size="9" fill="#e0e0e0">fields :customer, :orders,</text>
    <text x="570" y="370" font-family="monospace" font-size="9" fill="#e0e0e0">:preferences, :history</text>
    
    <text x="560" y="390" font-family="monospace" font-size="9" fill="#e0e0e0">def enrich</text>
    <text x="570" y="405" font-family="monospace" font-size="9" fill="#e0e0e0">load_related_data</text>
    <text x="550" y="420" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
    
    <!-- Request-Reply Pattern -->
    <rect x="770" y="280" width="200" height="140" rx="6" fill="#2d3748" stroke="#f6e05e" stroke-width="1"/>
    <text x="870" y="305" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#f6e05e">Request-Reply</text>
    
    <text x="790" y="325" font-family="monospace" font-size="9" fill="#9ca3af"># Synchronous-like</text>
    <text x="790" y="340" font-family="monospace" font-size="9" fill="#e0e0e0">class PriceQuoteRequest</text>
    <text x="800" y="355" font-family="monospace" font-size="9" fill="#e0e0e0">fields :item_id, :reply_to</text>
    
    <text x="800" y="375" font-family="monospace" font-size="9" fill="#e0e0e0">def process</text>
    <text x="810" y="390" font-family="monospace" font-size="9" fill="#e0e0e0">price = calculate_price</text>
    <text x="810" y="405" font-family="monospace" font-size="9" fill="#e0e0e0">reply(price)</text>
    <text x="790" y="420" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
  </g>
  
  <!-- Performance Patterns -->
  <g>
    <text x="500" y="470" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#e0e0e0">
      Performance and Scaling Patterns
    </text>
    
    <!-- Message Batching -->
    <rect x="50" y="500" width="180" height="120" rx="6" fill="#1a202c" stroke="#68d391" stroke-width="1"/>
    <text x="140" y="525" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#68d391">Message Batching</text>
    <text x="60" y="545" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Group similar operations</text>
    <text x="60" y="560" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Reduce I/O overhead</text>
    <text x="60" y="575" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Bulk database operations</text>
    <text x="60" y="590" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Configurable batch sizes</text>
    <text x="60" y="605" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Time-based flushing</text>
    
    <!-- Priority Queues -->
    <rect x="250" y="500" width="180" height="120" rx="6" fill="#1a202c" stroke="#4299e1" stroke-width="1"/>
    <text x="340" y="525" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#4299e1">Priority Queues</text>
    <text x="260" y="545" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Critical message routing</text>
    <text x="260" y="560" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• SLA-based processing</text>
    <text x="260" y="575" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• VIP customer handling</text>
    <text x="260" y="590" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Emergency operations</text>
    <text x="260" y="605" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Resource allocation</text>
    
    <!-- Partitioning -->
    <rect x="450" y="500" width="180" height="120" rx="6" fill="#1a202c" stroke="#9f7aea" stroke-width="1"/>
    <text x="540" y="525" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#9f7aea">Queue Partitioning</text>
    <text x="460" y="545" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Tenant-based separation</text>
    <text x="460" y="560" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Geographic distribution</text>
    <text x="460" y="575" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Load balancing</text>
    <text x="460" y="590" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Parallel processing</text>
    <text x="460" y="605" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Hotspot avoidance</text>
    
    <!-- Caching -->
    <rect x="650" y="500" width="180" height="120" rx="6" fill="#1a202c" stroke="#f6e05e" stroke-width="1"/>
    <text x="740" y="525" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#f6e05e">Message Caching</text>
    <text x="660" y="545" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Reference data caching</text>
    <text x="660" y="560" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Result memoization</text>
    <text x="660" y="575" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Expensive lookups</text>
    <text x="660" y="590" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• TTL-based invalidation</text>
    <text x="660" y="605" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Cache warming</text>
  </g>
  
  <!-- Security Best Practices -->
  <g>
    <text x="500" y="670" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#e0e0e0">
      Security and Compliance
    </text>
    
    <!-- Message Encryption -->
    <rect x="80" y="690" width="160" height="80" rx="6" fill="#1a202c" stroke="#e53e3e" stroke-width="1"/>
    <text x="160" y="710" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#e53e3e">Encryption</text>
    <text x="90" y="730" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Sensitive data protection</text>
    <text x="90" y="745" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• End-to-end security</text>
    <text x="90" y="760" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Key management</text>
    
    <!-- Authentication -->
    <rect x="260" y="690" width="160" height="80" rx="6" fill="#1a202c" stroke="#f6e05e" stroke-width="1"/>
    <text x="340" y="710" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#f6e05e">Authentication</text>
    <text x="270" y="730" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Connection security</text>
    <text x="270" y="745" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Client certificates</text>
    <text x="270" y="760" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Access control</text>
    
    <!-- Audit Logging -->
    <rect x="440" y="690" width="160" height="80" rx="6" fill="#1a202c" stroke="#4299e1" stroke-width="1"/>
    <text x="520" y="710" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#4299e1">Audit Logging</text>
    <text x="450" y="730" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Message traceability</text>
    <text x="450" y="745" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Compliance reporting</text>
    <text x="450" y="760" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Security monitoring</text>
    
    <!-- Data Privacy -->
    <rect x="620" y="690" width="160" height="80" rx="6" fill="#1a202c" stroke="#9f7aea" stroke-width="1"/>
    <text x="700" y="710" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#9f7aea">Data Privacy</text>
    <text x="630" y="730" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• PII handling</text>
    <text x="630" y="745" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Data minimization</text>
    <text x="630" y="760" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Retention policies</text>
    
    <!-- Network Security -->
    <rect x="800" y="690" width="160" height="80" rx="6" fill="#1a202c" stroke="#68d391" stroke-width="1"/>
    <text x="880" y="710" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#68d391">Network Security</text>
    <text x="810" y="730" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• TLS encryption</text>
    <text x="810" y="745" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• VPN connections</text>
    <text x="810" y="760" font-family="Arial, sans-serif" font-size="9" fill="#e0e0e0">• Firewall rules</text>
  </g>
  
  <!-- Connection arrows for flow -->
  <defs>
    <marker id="arrow-pattern" markerWidth="8" markerHeight="6" refX="7" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#ff9800"/>
    </marker>
  </defs>
  
  <!-- Design principles flow -->
  <line x1="230" y1="150" x2="250" y2="150" stroke="#ff9800" stroke-width="1" marker-end="url(#arrow-pattern)"/>
  <line x1="430" y1="150" x2="450" y2="150" stroke="#ff9800" stroke-width="1" marker-end="url(#arrow-pattern)"/>
  <line x1="630" y1="150" x2="650" y2="150" stroke="#ff9800" stroke-width="1" marker-end="url(#arrow-pattern)"/>
</svg>