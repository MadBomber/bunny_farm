<svg width="1000" height="700" xmlns="http://www.w3.org/2000/svg">
  <rect width="1000" height="700" fill="transparent"/>
  
  <!-- Title -->
  <text x="500" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#e0e0e0">
    Integration Patterns and External System Connectivity
  </text>
  
  <!-- Rails Integration -->
  <g>
    <text x="200" y="70" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#e53e3e">
      Rails/ActiveJob Integration
    </text>
    
    <rect x="50" y="90" width="300" height="140" rx="8" fill="#2d3748" stroke="#e53e3e" stroke-width="2"/>
    
    <text x="200" y="115" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#e53e3e">Rails Application</text>
    
    <!-- ActiveJob Adapter -->
    <rect x="70" y="130" width="120" height="30" rx="4" fill="#1a202c" stroke="#4299e1" stroke-width="1"/>
    <text x="130" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4299e1">ActiveJob Adapter</text>
    
    <!-- BunnyFarm Integration -->
    <rect x="210" y="130" width="120" height="30" rx="4" fill="#1a202c" stroke="#68d391" stroke-width="1"/>
    <text x="270" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#68d391">BunnyFarm Messages</text>
    
    <!-- Code Example -->
    <text x="70" y="185" font-family="monospace" font-size="9" fill="#9ca3af"># Job definition</text>
    <text x="70" y="200" font-family="monospace" font-size="9" fill="#e0e0e0">class EmailJob &lt; ApplicationJob</text>
    <text x="80" y="215" font-family="monospace" font-size="9" fill="#e0e0e0">queue_as :emails</text>
    <text x="70" y="230" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
  </g>
  
  <!-- Sidekiq Integration -->
  <g>
    <text x="500" y="70" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#f6e05e">
      Sidekiq Integration
    </text>
    
    <rect x="380" y="90" width="240" height="140" rx="8" fill="#2d3748" stroke="#f6e05e" stroke-width="2"/>
    
    <text x="500" y="115" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#f6e05e">Hybrid Architecture</text>
    
    <!-- Redis -->
    <rect x="400" y="130" width="70" height="25" rx="3" fill="#1a202c" stroke="#e53e3e" stroke-width="1"/>
    <text x="435" y="147" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#e53e3e">Redis</text>
    
    <!-- Sidekiq -->
    <rect x="480" y="130" width="70" height="25" rx="3" fill="#1a202c" stroke="#9f7aea" stroke-width="1"/>
    <text x="515" y="147" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#9f7aea">Sidekiq</text>
    
    <!-- BunnyFarm -->
    <rect x="560" y="130" width="70" height="25" rx="3" fill="#1a202c" stroke="#68d391" stroke-width="1"/>
    <text x="595" y="147" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#68d391">BunnyFarm</text>
    
    <!-- Use Cases -->
    <text x="400" y="180" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Sidekiq: Fast, simple jobs</text>
    <text x="400" y="195" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• BunnyFarm: Complex workflows</text>
    <text x="400" y="210" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Inter-service messaging</text>
    <text x="400" y="225" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• External system integration</text>
  </g>
  
  <!-- External Systems -->
  <g>
    <text x="800" y="70" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#4299e1">
      External System Integration
    </text>
    
    <rect x="680" y="90" width="240" height="140" rx="8" fill="#2d3748" stroke="#4299e1" stroke-width="2"/>
    
    <!-- API Gateway -->
    <rect x="700" y="110" width="80" height="20" rx="3" fill="#1a202c" stroke="#68d391" stroke-width="1"/>
    <text x="740" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#68d391">API Gateway</text>
    
    <!-- Webhooks -->
    <rect x="790" y="110" width="80" height="20" rx="3" fill="#1a202c" stroke="#f6e05e" stroke-width="1"/>
    <text x="830" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#f6e05e">Webhooks</text>
    
    <!-- Third-party APIs -->
    <rect x="700" y="140" width="80" height="20" rx="3" fill="#1a202c" stroke="#9f7aea" stroke-width="1"/>
    <text x="740" y="155" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#9f7aea">Payment APIs</text>
    
    <rect x="790" y="140" width="80" height="20" rx="3" fill="#1a202c" stroke="#e53e3e" stroke-width="1"/>
    <text x="830" y="155" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#e53e3e">Email Services</text>
    
    <!-- Message Bridge -->
    <rect x="700" y="170" width="170" height="25" rx="3" fill="#1a202c" stroke="#ff9800" stroke-width="2"/>
    <text x="785" y="187" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#ff9800">BunnyFarm Message Bridge</text>
    
    <!-- Integration Points -->
    <text x="700" y="215" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• HTTP → Message conversion</text>
    <text x="700" y="230" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Async → Sync response mapping</text>
  </g>
  
  <!-- Message Transformation Patterns -->
  <g>
    <text x="500" y="290" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#e0e0e0">
      Message Transformation Patterns
    </text>
    
    <!-- Content-Based Router -->
    <rect x="50" y="320" width="200" height="120" rx="6" fill="#2d3748" stroke="#68d391" stroke-width="1"/>
    <text x="150" y="345" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#68d391">Content-Based Router</text>
    
    <text x="70" y="365" font-family="monospace" font-size="9" fill="#e0e0e0">def route_message(msg)</text>
    <text x="80" y="380" font-family="monospace" font-size="9" fill="#e0e0e0">case msg.type</text>
    <text x="80" y="395" font-family="monospace" font-size="9" fill="#e0e0e0">when :urgent</text>
    <text x="90" y="410" font-family="monospace" font-size="9" fill="#e0e0e0">publish('urgent.queue')</text>
    <text x="80" y="425" font-family="monospace" font-size="9" fill="#e0e0e0">else</text>
    <text x="90" y="440" font-family="monospace" font-size="9" fill="#e0e0e0">publish('standard.queue')</text>
    <text x="70" y="455" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
    
    <!-- Message Translator -->
    <rect x="270" y="320" width="200" height="120" rx="6" fill="#2d3748" stroke="#4299e1" stroke-width="1"/>
    <text x="370" y="345" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#4299e1">Message Translator</text>
    
    <text x="290" y="365" font-family="monospace" font-size="9" fill="#e0e0e0">class OrderTranslator</text>
    <text x="300" y="380" font-family="monospace" font-size="9" fill="#e0e0e0">def to_external_format</text>
    <text x="310" y="395" font-family="monospace" font-size="9" fill="#e0e0e0">external_order = {</text>
    <text x="320" y="410" font-family="monospace" font-size="9" fill="#e0e0e0">orderId: order_id,</text>
    <text x="320" y="425" font-family="monospace" font-size="9" fill="#e0e0e0">customerId: customer_id</text>
    <text x="310" y="440" font-family="monospace" font-size="9" fill="#e0e0e0">}</text>
    <text x="290" y="455" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
    
    <!-- Message Enricher -->
    <rect x="490" y="320" width="200" height="120" rx="6" fill="#2d3748" stroke="#9f7aea" stroke-width="1"/>
    <text x="590" y="345" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#9f7aea">Message Enricher</text>
    
    <text x="510" y="365" font-family="monospace" font-size="9" fill="#e0e0e0">def enrich_order(msg)</text>
    <text x="520" y="380" font-family="monospace" font-size="9" fill="#e0e0e0"># Add customer details</text>
    <text x="520" y="395" font-family="monospace" font-size="9" fill="#e0e0e0">customer = Customer.find(</text>
    <text x="530" y="410" font-family="monospace" font-size="9" fill="#e0e0e0">msg.customer_id)</text>
    <text x="520" y="425" font-family="monospace" font-size="9" fill="#e0e0e0">msg.customer_data =</text>
    <text x="530" y="440" font-family="monospace" font-size="9" fill="#e0e0e0">customer.to_h</text>
    <text x="510" y="455" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
    
    <!-- Splitter Pattern -->
    <rect x="710" y="320" width="200" height="120" rx="6" fill="#2d3748" stroke="#f6e05e" stroke-width="1"/>
    <text x="810" y="345" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="#f6e05e">Message Splitter</text>
    
    <text x="730" y="365" font-family="monospace" font-size="9" fill="#e0e0e0">def split_order(msg)</text>
    <text x="740" y="380" font-family="monospace" font-size="9" fill="#e0e0e0">msg.items.each do |item|</text>
    <text x="750" y="395" font-family="monospace" font-size="9" fill="#e0e0e0">item_msg = ItemMessage</text>
    <text x="760" y="410" font-family="monospace" font-size="9" fill="#e0e0e0">.new(item)</text>
    <text x="750" y="425" font-family="monospace" font-size="9" fill="#e0e0e0">item_msg.publish(</text>
    <text x="760" y="440" font-family="monospace" font-size="9" fill="#e0e0e0">'process')</text>
    <text x="730" y="455" font-family="monospace" font-size="9" fill="#e0e0e0">end</text>
  </g>
  
  <!-- Protocol Adapters -->
  <g>
    <text x="500" y="510" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#e0e0e0">
      Protocol Adapters and Bridges
    </text>
    
    <!-- HTTP Bridge -->
    <rect x="80" y="540" width="160" height="100" rx="6" fill="#1a202c" stroke="#68d391" stroke-width="1"/>
    <text x="160" y="560" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#68d391">HTTP Bridge</text>
    <text x="90" y="580" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• REST API endpoints</text>
    <text x="90" y="595" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Webhook receivers</text>
    <text x="90" y="610" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• GraphQL subscriptions</text>
    <text x="90" y="625" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Server-sent events</text>
    
    <!-- Database Bridge -->
    <rect x="260" y="540" width="160" height="100" rx="6" fill="#1a202c" stroke="#4299e1" stroke-width="1"/>
    <text x="340" y="560" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#4299e1">Database Bridge</text>
    <text x="270" y="580" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Change data capture</text>
    <text x="270" y="595" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Trigger-based events</text>
    <text x="270" y="610" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Polling mechanisms</text>
    <text x="270" y="625" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Transaction log mining</text>
    
    <!-- File Bridge -->
    <rect x="440" y="540" width="160" height="100" rx="6" fill="#1a202c" stroke="#9f7aea" stroke-width="1"/>
    <text x="520" y="560" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#9f7aea">File System Bridge</text>
    <text x="450" y="580" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• File watchers</text>
    <text x="450" y="595" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• CSV/JSON imports</text>
    <text x="450" y="610" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• FTP/SFTP monitoring</text>
    <text x="450" y="625" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Cloud storage events</text>
    
    <!-- Message Bridge -->
    <rect x="620" y="540" width="160" height="100" rx="6" fill="#1a202c" stroke="#f6e05e" stroke-width="1"/>
    <text x="700" y="560" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#f6e05e">Message Bridge</text>
    <text x="630" y="580" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Kafka integration</text>
    <text x="630" y="595" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Apache Pulsar</text>
    <text x="630" y="610" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• AWS SQS/SNS</text>
    <text x="630" y="625" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Azure Service Bus</text>
    
    <!-- Email Bridge -->
    <rect x="800" y="540" width="160" height="100" rx="6" fill="#1a202c" stroke="#e53e3e" stroke-width="1"/>
    <text x="880" y="560" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#e53e3e">Email Bridge</text>
    <text x="810" y="580" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• IMAP monitoring</text>
    <text x="810" y="595" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Email parsing</text>
    <text x="810" y="610" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Attachment processing</text>
    <text x="810" y="625" font-family="Arial, sans-serif" font-size="10" fill="#e0e0e0">• Auto-reply systems</text>
  </g>
  
  <!-- Connection arrows -->
  <defs>
    <marker id="arrow-integrate" markerWidth="8" markerHeight="6" refX="7" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#ff9800"/>
    </marker>
  </defs>
  
  <!-- Integration flow arrows -->
  <line x1="350" y1="160" x2="380" y2="160" stroke="#ff9800" stroke-width="2" marker-end="url(#arrow-integrate)"/>
  <line x1="620" y1="160" x2="680" y2="160" stroke="#ff9800" stroke-width="2" marker-end="url(#arrow-integrate)"/>
</svg>