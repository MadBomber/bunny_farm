<svg width="800" height="650" xmlns="http://www.w3.org/2000/svg">
  <!-- Background transparent -->
  <rect width="800" height="650" fill="transparent"/>
  
  <!-- Title -->
  <text x="400" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#e0e0e0">
    BunnyFarm Message Class Structure
  </text>
  
  <!-- Class Definition -->
  <g>
    <rect x="50" y="60" width="700" height="120" rx="10" fill="#2d3748" stroke="#9f7aea" stroke-width="2"/>
    <text x="400" y="85" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#9f7aea">Message Class Definition</text>
    
    <rect x="70" y="100" width="660" height="70" fill="#1a202c" stroke="#4a5568" stroke-width="1"/>
    <text x="80" y="115" font-family="monospace" font-size="11" fill="#9f7aea">class OrderMessage &lt; BunnyFarm::Message</text>
    <text x="90" y="130" font-family="monospace" font-size="11" fill="#68d391">fields</text>
    <text x="130" y="130" font-family="monospace" font-size="11" fill="#e0e0e0">:order_id, :total, { customer: [:name, :email] }, { items: [:id, :qty] }</text>
    <text x="90" y="145" font-family="monospace" font-size="11" fill="#f6e05e">actions</text>
    <text x="130" y="145" font-family="monospace" font-size="11" fill="#e0e0e0">:validate, :process_payment, :ship, :cancel</text>
    <text x="80" y="160" font-family="monospace" font-size="11" fill="#9f7aea">end</text>
  </g>
  
  <!-- DSL Components -->
  <g>
    <rect x="50" y="200" width="340" height="160" rx="10" fill="#2d3748" stroke="#68d391" stroke-width="2"/>
    <text x="220" y="225" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#68d391">Fields DSL</text>
    <text x="220" y="245" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#e0e0e0">Define expected data structure</text>
    
    <rect x="70" y="255" width="300" height="95" fill="#1a202c" stroke="#4a5568" stroke-width="1"/>
    <text x="80" y="270" font-family="monospace" font-size="10" fill="#68d391">Simple fields:</text>
    <text x="80" y="285" font-family="monospace" font-size="10" fill="#e0e0e0">:name, :email, :amount</text>
    
    <text x="80" y="305" font-family="monospace" font-size="10" fill="#68d391">Nested objects:</text>
    <text x="80" y="320" font-family="monospace" font-size="10" fill="#e0e0e0">{ customer: [:name, :email] }</text>
    
    <text x="80" y="340" font-family="monospace" font-size="10" fill="#68d391">Arrays of objects:</text>
    <text x="80" y="355" font-family="monospace" font-size="10" fill="#e0e0e0">{ items: [:product_id, :quantity] }</text>
    
    <rect x="410" y="200" width="340" height="160" rx="10" fill="#2d3748" stroke="#f6e05e" stroke-width="2"/>
    <text x="580" y="225" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#f6e05e">Actions DSL</text>
    <text x="580" y="245" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#e0e0e0">Define available operations</text>
    
    <rect x="430" y="255" width="300" height="95" fill="#1a202c" stroke="#4a5568" stroke-width="1"/>
    <text x="440" y="270" font-family="monospace" font-size="10" fill="#f6e05e">actions :create, :update, :delete</text>
    <text x="440" y="290" font-family="monospace" font-size="10" fill="#9ca3af"># Each action becomes a method</text>
    <text x="440" y="310" font-family="monospace" font-size="10" fill="#f6e05e">def create(*args)</text>
    <text x="450" y="325" font-family="monospace" font-size="10" fill="#e0e0e0"># Process creation logic</text>
    <text x="450" y="340" font-family="monospace" font-size="10" fill="#68d391">success!</text>
    <text x="440" y="355" font-family="monospace" font-size="10" fill="#f6e05e">end</text>
  </g>
  
  <!-- Message Instance Structure -->
  <g>
    <rect x="50" y="380" width="700" height="140" rx="10" fill="#2d3748" stroke="#4299e1" stroke-width="2"/>
    <text x="400" y="405" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#4299e1">Message Instance Structure</text>
    
    <!-- Instance Variables -->
    <rect x="80" y="420" width="200" height="90" rx="5" fill="#1a202c" stroke="#4a5568" stroke-width="1"/>
    <text x="180" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#4299e1">Instance Variables</text>
    <text x="90" y="455" font-family="monospace" font-size="10" fill="#68d391">@items</text>
    <text x="125" y="455" font-family="monospace" font-size="10" fill="#e0e0e0">- Validated data</text>
    <text x="90" y="470" font-family="monospace" font-size="10" fill="#68d391">@elements</text>
    <text x="140" y="470" font-family="monospace" font-size="10" fill="#e0e0e0">- Raw JSON data</text>
    <text x="90" y="485" font-family="monospace" font-size="10" fill="#68d391">@payload</text>
    <text x="135" y="485" font-family="monospace" font-size="10" fill="#e0e0e0">- JSON string</text>
    <text x="90" y="500" font-family="monospace" font-size="10" fill="#68d391">@errors</text>
    <text x="130" y="500" font-family="monospace" font-size="10" fill="#e0e0e0">- Error messages</text>
    
    <!-- Access Methods -->
    <rect x="300" y="420" width="180" height="90" rx="5" fill="#1a202c" stroke="#4a5568" stroke-width="1"/>
    <text x="390" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#4299e1">Access Methods</text>
    <text x="310" y="455" font-family="monospace" font-size="10" fill="#68d391">msg[:field]</text>
    <text x="370" y="455" font-family="monospace" font-size="10" fill="#e0e0e0">- Get value</text>
    <text x="310" y="470" font-family="monospace" font-size="10" fill="#68d391">msg[:field] = val</text>
    <text x="395" y="470" font-family="monospace" font-size="10" fill="#e0e0e0">- Set</text>
    <text x="310" y="485" font-family="monospace" font-size="10" fill="#68d391">msg.to_json</text>
    <text x="370" y="485" font-family="monospace" font-size="10" fill="#e0e0e0">- Serialize</text>
    <text x="310" y="500" font-family="monospace" font-size="10" fill="#68d391">msg.keys</text>
    <text x="350" y="500" font-family="monospace" font-size="10" fill="#e0e0e0">- Get fields</text>
    
    <!-- State Methods -->
    <rect x="500" y="420" width="220" height="90" rx="5" fill="#1a202c" stroke="#4a5568" stroke-width="1"/>
    <text x="610" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#4299e1">State Management</text>
    <text x="510" y="455" font-family="monospace" font-size="10" fill="#68d391">success!</text>
    <text x="550" y="455" font-family="monospace" font-size="10" fill="#e0e0e0">- Mark successful</text>
    <text x="510" y="470" font-family="monospace" font-size="10" fill="#e53e3e">failure(msg)</text>
    <text x="570" y="470" font-family="monospace" font-size="10" fill="#e0e0e0">- Mark failed</text>
    <text x="510" y="485" font-family="monospace" font-size="10" fill="#68d391">successful?</text>
    <text x="570" y="485" font-family="monospace" font-size="10" fill="#e0e0e0">- Check status</text>
    <text x="510" y="500" font-family="monospace" font-size="10" fill="#68d391">publish(action)</text>
    <text x="585" y="500" font-family="monospace" font-size="10" fill="#e0e0e0">- Send msg</text>
  </g>
  
  <!-- Data Flow Example -->
  <g>
    <rect x="50" y="540" width="700" height="100" rx="10" fill="#2d3748" stroke="#ed8936" stroke-width="2"/>
    <text x="400" y="565" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#ed8936">Data Flow Example</text>
    
    <!-- Step boxes -->
    <rect x="70" y="580" width="120" height="50" rx="5" fill="#68d391"/>
    <text x="130" y="595" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#1a202c">1. JSON Input</text>
    <text x="130" y="610" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">Raw message data</text>
    <text x="130" y="620" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">from RabbitMQ</text>
    
    <rect x="210" y="580" width="120" height="50" rx="5" fill="#4299e1"/>
    <text x="270" y="595" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#1a202c">2. Parse &amp; Validate</text>
    <text x="270" y="610" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">Extract fields</text>
    <text x="270" y="620" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">using DSL definition</text>
    
    <rect x="350" y="580" width="120" height="50" rx="5" fill="#9f7aea"/>
    <text x="410" y="595" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#1a202c">3. Route Action</text>
    <text x="410" y="610" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">Call method based</text>
    <text x="410" y="620" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">on routing key</text>
    
    <rect x="490" y="580" width="120" height="50" rx="5" fill="#f6e05e"/>
    <text x="550" y="595" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#1a202c">4. Execute Logic</text>
    <text x="550" y="610" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">Run business</text>
    <text x="550" y="620" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">logic in action</text>
    
    <rect x="630" y="580" width="120" height="50" rx="5" fill="#e53e3e"/>
    <text x="690" y="595" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#1a202c">5. ACK/NACK</text>
    <text x="690" y="610" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">Acknowledge</text>
    <text x="690" y="620" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#1a202c">to RabbitMQ</text>
    
    <!-- Arrows -->
    <defs>
      <marker id="arrow-flow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
        <polygon points="0 0, 10 3.5, 0 7" fill="#ed8936"/>
      </marker>
    </defs>
    
    <line x1="190" y1="605" x2="210" y2="605" stroke="#ed8936" stroke-width="2" marker-end="url(#arrow-flow)"/>
    <line x1="330" y1="605" x2="350" y2="605" stroke="#ed8936" stroke-width="2" marker-end="url(#arrow-flow)"/>
    <line x1="470" y1="605" x2="490" y2="605" stroke="#ed8936" stroke-width="2" marker-end="url(#arrow-flow)"/>
    <line x1="610" y1="605" x2="630" y2="605" stroke="#ed8936" stroke-width="2" marker-end="url(#arrow-flow)"/>
  </g>
</svg>